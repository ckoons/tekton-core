#
# .env.tekton
#   This file is used to configure the Tekton Multi-AI Engineering Platform.
#   You should not place any 'secrets' such as API keys or passwords in this file. 
#   This file is uploaded to GitHub and is accessible to anyone who has access to the repository.
#   You may configure all Tekton environment, profile and settings using this file that are not 'secret'
#   For API keys and passwords or secret information, consider using ~/.env and Tekton/.env.local 
#

# Project Root Directory
# This is automatically set by env_manager.py when loading the environment
TEKTON_ROOT=/Users/cskoons/projects/github/Tekton

# UI Display Settings
# Whether to show Greek names for components (true/false)
SHOW_GREEK_NAMES='false'

# Theme Settings
# Theme mode: 'dark' or 'light'
TEKTON_THEME_MODE='dark'
# Theme color: 'blue', 'green', or 'purple'  
TEKTON_THEME_COLOR='blue'

# Debug Settings
# Master switch for debug instrumentation (true/false)
TEKTON_DEBUG=false
# Log level: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
TEKTON_LOG_LEVEL=INFO
# Log format: compact, standard, detailed, debug, minimal, json
TEKTON_LOG_FORMAT=standard

# Component-specific log format overrides (uncomment to use)
APOLLO_LOG_FORMAT=detailed
# HERMES_LOG_FORMAT=debug
# ENGRAM_LOG_FORMAT=debug
# RHETOR_LOG_FORMAT=debug
# ATHENA_LOG_FORMAT=debug
# SYNTHESIS_LOG_FORMAT=debug
# ERGON_LOG_FORMAT=debug
# SOPHIA_LOG_FORMAT=debug
# PROMETHEUS_LOG_FORMAT=debug
# HARMONIA_LOG_FORMAT=debug
# BUDGET_LOG_FORMAT=debug
# METIS_LOG_FORMAT=debug
# TELOS_LOG_FORMAT=debug
# TERMA_LOG_FORMAT=debug
# HEPHAESTUS_LOG_FORMAT=debug
# TEKTON_CORE_LOG_FORMAT=debug

# Component Port Assignments (Single Port Architecture)
# UI system (using standard web port)
HEPHAESTUS_PORT=8080
# Memory system
ENGRAM_PORT=8000
# Service registry & messaging
HERMES_PORT=8001
# Agent system
ERGON_PORT=8002
# LLM management
RHETOR_PORT=8003
# Terminal system
TERMA_PORT=8004
# Knowledge graph
ATHENA_PORT=8005
# Planning system
PROMETHEUS_PORT=8006
# Workflow system
HARMONIA_PORT=8007
# Requirements system
TELOS_PORT=8008
# Execution engine
SYNTHESIS_PORT=8009
# Core orchestration
TEKTON_CORE_PORT=8010
# Task management system
METIS_PORT=8011
# Local Attention/Prediction system
APOLLO_PORT=8012
# Token/cost management system
BUDGET_PORT=8013
# Machine learning system
SOPHIA_PORT=8014

# Specialized Service Ports

# WebSocket for Terma Terminal (legacy)
TERMA_WS_PORT=8767

# Terminal Settings
# Terminal mode: 'advanced' or 'simple'
TEKTON_TERMINAL_MODE='advanced'
# Terminal font size in pixels (8-24)
TEKTON_TERMINAL_FONT_SIZE='14'
# Terminal font family
TEKTON_TERMINAL_FONT_FAMILY="'Courier New', monospace"
# Terminal theme: 'default', 'light', 'dark', 'monokai', 'solarized'
TEKTON_TERMINAL_THEME='default'
# Terminal cursor style: 'block', 'bar', 'underline'
TEKTON_TERMINAL_CURSOR_STYLE='block'
# Terminal cursor blink (true/false)
TEKTON_TERMINAL_CURSOR_BLINK='true'
# Terminal scrollback enabled (true/false)
TEKTON_TERMINAL_SCROLLBACK='true'
# Terminal scrollback lines
TEKTON_TERMINAL_SCROLLBACK_LINES='1000'

# Chat Settings
# Chat history enabled (true/false)
TEKTON_CHAT_HISTORY_ENABLED='true'
# Maximum chat history entries
TEKTON_CHAT_HISTORY_MAX_ENTRIES='50'

# Performance Settings
# Auto-launch components on startup (true/false)
TEKTON_AUTO_LAUNCH=true
# Component startup timeout in seconds
TEKTON_COMPONENT_TIMEOUT=30

# Integration Settings
# Enable MCP integration (true/false)
TEKTON_MCP_ENABLED=true
# Enable Hermes service discovery (true/false)
TEKTON_HERMES_DISCOVERY=true

# User Preferences (can be overridden by Profile settings)
# Default model for LLM operations
TEKTON_DEFAULT_MODEL=claude-3-sonnet
# Default provider for LLM operations  
TEKTON_DEFAULT_PROVIDER=anthropic
# Enable notifications (true/false)
TEKTON_NOTIFICATIONS_ENABLED=true

# Component Feature Flags
# Enable Apollo predictive features (true/false)
TEKTON_APOLLO_PREDICTIONS=true
# Enable Sophia machine learning features (true/false)
TEKTON_SOPHIA_ML=true
# Enable Budget cost tracking (true/false)
TEKTON_BUDGET_TRACKING=true
# Enable Ergon agent automation (true/false)
TEKTON_ERGON_AUTOMATION=true

