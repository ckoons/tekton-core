#!/bin/bash

# cpfiles - Copy files to a target directory
# Usage: 
#   cat list_of_files.txt | cpfiles -i target_directory
#   cpfiles -f file_containing_filenames target_directory

show_usage() {
    echo "Usage:"
    echo "  cat list_of_files.txt | cpfiles -i target_directory"
    echo "  cpfiles -f file_containing_filenames target_directory"
    echo ""
    echo "Options:"
    echo "  -i              Process filenames from stdin (piped input)"
    echo "  -f file.txt     Process filenames from the specified file"
    echo ""
    exit 1
}

# Check if there are enough arguments
if [ $# -lt 2 ]; then
    show_usage
fi

# Parse command-line options
input_mode=""
input_file=""
target_dir=""

while getopts "if:" opt; do
    case $opt in
        i)
            input_mode="stdin"
            ;;
        f)
            input_mode="file"
            input_file="$OPTARG"
            ;;
        *)
            show_usage
            ;;
    esac
done

# Get target directory (last argument)
shift $((OPTIND-1))
if [ $# -lt 1 ]; then
    echo "Error: Missing target directory"
    show_usage
fi
target_dir="$1"

# Create target directory if it doesn't exist
if [ ! -d "$target_dir" ]; then
    echo "Creating target directory: $target_dir"
    mkdir -p "$target_dir"
    if [ $? -ne 0 ]; then
        echo "Error: Could not create target directory: $target_dir"
        exit 1
    fi
fi

# Process files based on input mode
process_files() {
    while read file; do
        # Skip empty lines
        if [ -z "$file" ]; then
            continue
        fi
        
        # Check if the file exists
        if [ ! -f "$file" ]; then
            echo "Warning: File not found: $file"
            continue
        fi
        
        # Copy the file to target directory
        echo "Copying: $file â†’ $target_dir"
        cp "$file" "$target_dir/"
        
        # Check if copy was successful
        if [ $? -ne 0 ]; then
            echo "Error: Could not copy file: $file"
        fi
    done
}

# Process files based on input mode
if [ "$input_mode" = "stdin" ]; then
    echo "Reading filenames from stdin..."
    process_files
elif [ "$input_mode" = "file" ]; then
    if [ ! -f "$input_file" ]; then
        echo "Error: Input file not found: $input_file"
        exit 1
    fi
    echo "Reading filenames from file: $input_file"
    process_files < "$input_file"
else
    show_usage
fi

echo "File copying complete!"
exit 0